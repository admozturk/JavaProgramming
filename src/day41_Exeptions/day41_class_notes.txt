Java Day41
Topics: Exceptions Intro

Package name: day41_Exceptions


Access Modifiers:
		public > protected > default > private


Final Keyword: unchangeable

		Variables: can not be reassigned

		Methods: can not be overridden

		Classes: can not be inherited (can not be parented)


Exceptions Topic:
		1. Unchecked vs Checked
		2. try & catch blocks
		3. Multi-catch block
		4. finally block


OutOfMemoryError: heap memory is full



Exceptions: unexpected or unwanted events

		Unchecked (unexpected event): occurs during the runtime

					all the RuntimeExceptions are unchecked exceptions

		checked (unwanted event): occurs during the compile time error

					all the exceptions that are not RuntimeExceptions are checked exception



Exception handlings:

		1. Try & Catch blocks: used for handling checked and unchecked exceptions

						try{

							exception code

						}catch(ExceptionClass  e){

							e.printStackTrace();

						}


			Multi-catch block: parent exception type can not be placed before the child exception type

			finally block: always gets executed regardless of the exception is being handled or not handled

							to stop the execution of the finally block: Syste.exit(0)


Interview Question:

		final: keyword, and it is unchangeable applicable for variables methods and classes
		finally: Block it is an optional block of try catch it always gets executed regardless of the exception
		         is being handled or not handled. we can only stop being executed finally block by applying explicitly
		         system.exit(0)
		finalize: it is a method inherited to every single object. Every single object must have a finalize method.
		          This method is automatically called by Garbage Collector as soon your target object is unreferenced
		          This method helps Garbage collector to clear hip memory from the unreferenced objects



next Thursday:
		5. throws keyword
		6. throw keyword
		7. Custom Exception


Next Next Monday (Jan 31st):
	OOP Abstraction




	OOP Polymorphism
